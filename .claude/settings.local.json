{
  "permissions": {
    "allow": [
      "Bash(./pre-deployment-check.sh:*)",
      "Bash(./test-deployment.sh:*)",
      "Bash(ssh:*)",
      "Bash(__NEW_LINE__ echo 'ðŸ’¬ Testing inventory question:')",
      "Bash(__NEW_LINE__ echo -e '\\nðŸ’¬ Testing scheduling question:')",
      "Bash(__NEW_LINE__ echo -e '\\nðŸ’¬ Testing work order creation:')",
      "Bash(curl:*)",
      "Bash(__NEW_LINE__ echo -e '\\nðŸ’¬ Testing general conversation:')",
      "Bash(chmod:*)",
      "Bash(./setup-domain.sh:*)",
      "Bash(scp:*)",
      "Bash(tar:*)",
      "Bash(python:*)",
      "Bash(pkill:*)",
      "Bash(gcloud run services logs read:*)",
      "WebFetch(domain:chatterfix-cmms-psycl7nhha-uc.a.run.app)",
      "WebFetch(domain:latest---chatterfix-cmms-psycl7nhha-uc.a.run.app)",
      "WebFetch(domain:chatterfix.com)",
      "Bash(git add:*)",
      "Bash(PRE_COMMIT_ALLOW_NO_CONFIG=1 git commit -m \"ðŸ”§ Fix Cloud Run database initialization for work orders API\n\n- Add database table existence check before queries\n- Auto-initialize database if work_orders table missing  \n- Resolves ephemeral instance database issues\n- Ensures consistent data access across Cloud Run instances\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(PGPASSWORD='ChatterFix2025!' psql:*)",
      "Bash(gcloud sql instances create:*)",
      "Bash(gcloud sql instances list:*)",
      "Bash(pip install:*)",
      "Bash(./deploy-chatterfix.sh:*)",
      "Bash(gcloud run services describe:*)",
      "WebFetch(domain:chatterfix-cmms-650169261019.us-central1.run.app)",
      "Bash(gcloud run operations list:*)",
      "Bash(gcloud builds list:*)",
      "Bash(gcloud run domain-mappings create:*)",
      "Bash(gcloud beta run domain-mappings create:*)",
      "Bash(gcloud run deploy:*)",
      "Bash(md5sum:*)",
      "Bash(./deploy-chatterfix-FORCE-FRESH.sh:*)",
      "Bash(./deploy-database-service.sh:*)",
      "Bash(./deploy-work-orders-service.sh:*)",
      "Bash(./deploy-assets-service.sh:*)",
      "Bash(./deploy-parts-service.sh:*)",
      "Bash(./deploy-ai-brain-service.sh:*)",
      "Bash(./deploy-ui-gateway-service.sh:*)",
      "Bash(./deploy-complete-microservices.sh)",
      "Bash(gcloud beta run domain-mappings list:*)",
      "Bash(./deploy-all-microservices.sh:*)",
      "WebFetch(domain:chatterfix-work-orders-psycl7nhha-uc.a.run.app)",
      "Bash(gcloud run services:*)",
      "WebFetch(domain:chatterfix-work-orders-650169261019.us-central1.run.app)",
      "Bash(find:*)",
      "Bash(PRE_COMMIT_ALLOW_NO_CONFIG=1 git commit -m \"ðŸŽ‰ ChatterFix CMMS Complete - Clean Repository Start\n\nComplete microservices CMMS with enhanced work order management:\n\nâœ… MICROSERVICES ARCHITECTURE:\n- Database Service: PostgreSQL with 25+ tables\n- Work Orders Service: Full CRUD operations with real-time UI\n- Assets Service: Asset management and tracking\n- Parts Service: Inventory management\n- AI Brain Service: Multi-provider AI (OpenAI, xAI, Anthropic)\n- UI Gateway Service: API routing and web interface\n\nâœ… SECURITY FEATURES:\n- Comprehensive .gitignore protecting sensitive data\n- Environment templates for secure configuration\n- GitHub secrets integration ready\n- No hardcoded API keys\n\nâœ… PRODUCTION DEPLOYMENT:\n- All services deployed on Google Cloud Run\n- Live at: https://chatterfix.com\n- Auto-scaling microservices architecture\n- Health monitoring and error handling\n\nâœ… ENHANCED WORK ORDER SYSTEM:\n- Interactive creation forms with validation\n- Real-time data loading from PostgreSQL\n- Priority and status management\n- AI-powered recommendations\n- Mobile-responsive design\n\nðŸ¤– Generated with [Claude Code](https://claude.ai/code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\")",
      "Bash(gh pr create:*)",
      "Bash(unset GITHUB_TOKEN)",
      "Bash(gh auth:*)",
      "WebFetch(domain:chatterfix-ai-brain-650169261019.us-central1.run.app)",
      "Bash(comm:*)",
      "WebFetch(domain:chatterfix-parts-650169261019.us-central1.run.app)",
      "WebFetch(domain:chatterfix-assets-650169261019.us-central1.run.app)",
      "WebSearch",
      "Bash(./deploy-document-intelligence-service.sh:*)",
      "WebFetch(domain:chatterfix-document-intelligence-650169261019.us-central1.run.app)",
      "Bash(lsof:*)",
      "Bash(grep:*)",
      "Bash(PORT=8005 python3 ai_brain_service.py)",
      "Bash(PORT=8007 python3 enterprise_security_service.py)",
      "Bash(./deploy-chatterfix-production.sh:*)",
      "Bash(gcloud compute forwarding-rules list:*)",
      "Bash(echo:*)"
    ],
    "deny": [],
    "ask": []
  }
}