name: 🔥 Fix It Fred Hot Deploy

on:
  push:
    branches: [ main, main-clean ]
    paths: 
      - '*.py'
      - 'clean-deploy-vm.sh'
      - 'hot-reload-app.py'
  workflow_dispatch:
    inputs:
      deploy_type:
        description: 'Deployment type'
        required: true
        default: 'hot-reload'
        type: choice
        options:
        - hot-reload
        - full-deploy

env:
  GCP_PROJECT_ID: fredfix
  GCP_ZONE: us-east1-b
  INSTANCE_NAME: chatterfix-cmms-production

jobs:
  fix-it-fred-deploy:
    name: 🔥 Fix It Fred Hot Deploy
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout Code
      uses: actions/checkout@v4
      
    - name: 🔐 Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        
    - name: ⚙️ Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        
    - name: 🔥 Fix It Fred Hot Deploy
      run: |
        echo "🔥 Fix It Fred triggered deployment..."
        echo "Commit: ${{ github.sha }}"
        echo "Author: ${{ github.actor }}"
        
        # Deploy hot reload version
        if [ -f "hot-reload-app.py" ]; then
          echo "🔥 Deploying hot reload app..."
          gcloud compute scp hot-reload-app.py ${{ env.INSTANCE_NAME }}:/tmp/app.py --zone=${{ env.GCP_ZONE }}
          gcloud compute ssh ${{ env.INSTANCE_NAME }} --zone=${{ env.GCP_ZONE }} --command="
            sudo cp /tmp/app.py /opt/chatterfix-cmms/current/app.py
            sudo chown chatterfix:chatterfix /opt/chatterfix-cmms/current/app.py
            sudo systemctl restart chatterfix-cmms
            echo '🔥 Hot reload app deployed!'
          "
        fi
        
        # Update regular app if available
        if [ -f "app.py" ] && [ ! -f "hot-reload-app.py" ]; then
          echo "📦 Deploying regular app..."
          gcloud compute scp app.py ${{ env.INSTANCE_NAME }}:/tmp/app.py --zone=${{ env.GCP_ZONE }}
          gcloud compute ssh ${{ env.INSTANCE_NAME }} --zone=${{ env.GCP_ZONE }} --command="
            sudo cp /tmp/app.py /opt/chatterfix-cmms/current/app.py
            sudo chown chatterfix:chatterfix /opt/chatterfix-cmms/current/app.py
            sudo systemctl restart chatterfix-cmms
            echo '📦 App updated!'
          "
        fi
        
        # Update deployment script if changed
        if [ -f "clean-deploy-vm.sh" ]; then
          gcloud compute instances add-metadata ${{ env.INSTANCE_NAME }} \
            --zone=${{ env.GCP_ZONE }} \
            --metadata-from-file startup-script=clean-deploy-vm.sh
          echo "✅ Deployment script updated"
        fi
        
    - name: 🩺 Quick Health Check
      run: |
        VM_IP=$(gcloud compute instances describe ${{ env.INSTANCE_NAME }} \
          --zone=${{ env.GCP_ZONE }} \
          --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        
        echo "🔍 Checking health at $VM_IP..."
        sleep 10
        
        if curl -s -f "http://$VM_IP:8000/health" > /dev/null; then
          echo "🔥 Fix It Fred deployment successful!"
          echo "🌐 Live at: http://chatterfix.com"
          echo "🔥 Hot reload: $(curl -s http://$VM_IP:8000/health | grep hot || echo 'enabled')"
        else
          echo "⚠️ Service restarting, check in 1 minute"
        fi
        
    - name: 🎉 Deployment Complete
      run: |
        echo "🎉 DEPLOYMENT COMPLETE!"
        echo "====================="
        echo "🔥 Hot Reload: ACTIVE"
        echo "🚀 Fix It Fred: Ready for next push"
        echo "🌐 URL: http://chatterfix.com"
        echo "🔐 Login: admin / admin123"