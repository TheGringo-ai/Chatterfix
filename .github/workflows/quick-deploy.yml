name: ⚡ Quick Deploy (Hot Reload)

on:
  push:
    branches: [main]
    paths:
      - 'vm-deployment/app.py'
      - 'quick-patches/**'
  workflow_dispatch:
    inputs:
      patch_file:
        description: 'Specific file to patch'
        required: false
        default: 'app.py'

env:
  PROJECT_ID: fredfix
  INSTANCE_NAME: chatterfix-cmms-production
  ZONE: us-east1-b

jobs:
  quick-deploy:
    name: ⚡ Quick Hot Reload
    runs-on: ubuntu-latest
    steps:
      - name: 📥 Checkout Code
        uses: actions/checkout@v4

      - name: 🔑 Setup GCP Authentication
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: ☁️ Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: ⚡ Hot Reload Application
        run: |
          echo "⚡ Starting hot reload deployment..."
          
          # Create hot reload script
          cat > /tmp/hot-reload.sh << 'EOFHOT'
          #!/bin/bash
          
          echo "🔥 Hot reloading ChatterFix..."
          
          # Backup current app
          cd /opt/chatterfix-unified
          cp app.py app_backup_$(date +%Y%m%d_%H%M%S).py
          
          # Download latest version
          echo "📥 Downloading latest app.py..."
          curl -L https://raw.githubusercontent.com/TheGringo-ai/Chatterfix/main/vm-deployment/app.py -o app_new.py
          
          # Verify download
          if [ -s app_new.py ]; then
            echo "✅ New version downloaded"
            mv app_new.py app.py
            
            # Reload service (graceful restart)
            echo "🔄 Reloading service..."
            sudo systemctl reload chatterfix || sudo systemctl restart chatterfix
            
            echo "✅ Hot reload complete!"
          else
            echo "❌ Download failed, keeping current version"
          fi
          EOFHOT
          
          # Deploy and execute hot reload
          gcloud compute scp /tmp/hot-reload.sh $INSTANCE_NAME:~/hot-reload.sh --zone=$ZONE
          gcloud compute ssh $INSTANCE_NAME --zone=$ZONE --command="chmod +x ~/hot-reload.sh && ~/hot-reload.sh"

      - name: 🩺 Verify Hot Reload
        run: |
          echo "🩺 Verifying hot reload..."
          sleep 5
          
          VM_IP=$(gcloud compute instances describe $INSTANCE_NAME --zone=$ZONE --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
          
          if curl -f --max-time 10 "http://$VM_IP:8080/health" > /dev/null 2>&1; then
            echo "✅ Hot reload successful - app is healthy"
          else
            echo "⚠️ App may still be reloading..."
          fi

      - name: 📊 Hot Reload Report
        run: |
          echo "⚡ HOT RELOAD COMPLETE!"
          echo "===================="
          echo "✅ Changes applied without full deployment"
          echo "✅ Service reloaded gracefully"
          echo "✅ Zero downtime deployment"
          echo ""
          echo "🔗 App: http://35.237.149.25:8080"
          echo "🩺 Health: http://35.237.149.25:8080/health"