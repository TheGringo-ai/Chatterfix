name: ‚ö° Quick Update (App Only)

on:
  push:
    paths:
      - 'core/cmms/app.py'
      - 'core/cmms/templates/**'
    branches: [ main, main-clean ]
  workflow_dispatch:

env:
  GCP_PROJECT_ID: fredfix
  GCP_ZONE: us-east1-b
  INSTANCE_NAME: chatterfix-cmms-production

jobs:
  quick-update:
    name: ‚ö° Quick App Update
    runs-on: ubuntu-latest
    
    steps:
    - name: üì• Checkout Code
      uses: actions/checkout@v4
      
    - name: üîê Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}
        
    - name: ‚öôÔ∏è Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2
      with:
        project_id: ${{ env.GCP_PROJECT_ID }}
        
    - name: ‚ö° Quick App Update
      run: |
        VM_IP=$(gcloud compute instances describe ${{ env.INSTANCE_NAME }} \
          --zone=${{ env.GCP_ZONE }} \
          --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        
        echo "‚ö° Performing quick app update on $VM_IP..."
        
        # Create update script
        cat > quick-update.sh << 'EOF'
        #!/bin/bash
        echo "‚ö° Quick update starting..."
        
        # Backup current app
        cp /opt/chatterfix-cmms/current/app.py /opt/chatterfix-cmms/current/app.py.backup
        
        # Download updated app from GitHub
        curl -s -o /opt/chatterfix-cmms/current/app.py.new \
          https://raw.githubusercontent.com/fredtaylor/ai-tools/main/core/cmms/app.py
        
        # Verify download
        if [ -s /opt/chatterfix-cmms/current/app.py.new ]; then
          mv /opt/chatterfix-cmms/current/app.py.new /opt/chatterfix-cmms/current/app.py
          chown chatterfix:chatterfix /opt/chatterfix-cmms/current/app.py
          
          # Restart service
          systemctl restart chatterfix-cmms
          sleep 5
          
          # Health check
          if curl -s http://localhost:8000/health > /dev/null; then
            echo "‚úÖ Quick update successful!"
          else
            echo "‚ùå Update failed, rolling back..."
            mv /opt/chatterfix-cmms/current/app.py.backup /opt/chatterfix-cmms/current/app.py
            systemctl restart chatterfix-cmms
          fi
        else
          echo "‚ùå Failed to download new app.py"
        fi
        EOF
        
        # Execute update script on VM
        gcloud compute ssh ${{ env.INSTANCE_NAME }} \
          --zone=${{ env.GCP_ZONE }} \
          --command="sudo bash -s" < quick-update.sh
        
    - name: ü©∫ Verify Update
      run: |
        VM_IP=$(gcloud compute instances describe ${{ env.INSTANCE_NAME }} \
          --zone=${{ env.GCP_ZONE }} \
          --format="value(networkInterfaces[0].accessConfigs[0].natIP)")
        
        echo "ü©∫ Verifying update..."
        sleep 10
        
        if curl -s "http://$VM_IP:8000/health" | grep -q "healthy"; then
          echo "‚úÖ Quick update successful!"
          echo "üåê Service available at: http://$VM_IP"
        else
          echo "‚ùå Update verification failed"
          exit 1
        fi