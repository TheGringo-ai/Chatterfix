name: Deploy ChatterFix CMMS to Google Cloud Run

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GAR_LOCATION: us-central1
  SERVICE: chatterfix-cmms-mars-level
  REGION: us-central1

jobs:
  deploy:
    permissions:
      contents: read
      id-token: write

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{ secrets.GCP_SA_KEY }}'

      - name: Set up Cloud SDK
        uses: 'google-github-actions/setup-gcloud@v2'

      - name: Configure Docker to use gcloud as a credential helper
        run: |
          gcloud auth configure-docker $GAR_LOCATION-docker.pkg.dev

      - name: Create Artifact Repository
        run: |
          gcloud artifacts repositories create $SERVICE \
            --repository-format=docker \
            --location=$GAR_LOCATION \
            --description="ChatterFix CMMS Mars-Level AI Platform" || true

      - name: Build and Push Container
        run: |-
          docker build -f Dockerfile.production -t "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA" .
          docker push "$GAR_LOCATION-docker.pkg.dev/$PROJECT_ID/$SERVICE/$SERVICE:$GITHUB_SHA"

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: ${{ env.GAR_LOCATION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.SERVICE }}/${{ env.SERVICE }}:${{ github.sha }}
          env_vars: |
            ENVIRONMENT=production
            PORT=8080
            LOG_LEVEL=INFO
            PYTHONPATH=/app
          secrets: |
            JWT_SECRET=jwt-secret:latest
            XAI_API_KEY=xai-api-key:latest
            OPENAI_API_KEY=openai-api-key:latest
            HUGGINGFACE_API_KEY=huggingface-api-key:latest
          flags: |
            --allow-unauthenticated
            --port=8080
            --memory=2Gi
            --cpu=2
            --concurrency=100
            --max-instances=10
            --min-instances=1
            --execution-environment=gen2

      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}

      - name: Verify Deployment
        run: |
          sleep 30
          curl -f ${{ steps.deploy.outputs.url }}/mars-status || exit 1
          echo "üéâ ChatterFix CMMS Mars-Level AI Platform deployed successfully!"
          echo "üåê Access your application at: ${{ steps.deploy.outputs.url }}"