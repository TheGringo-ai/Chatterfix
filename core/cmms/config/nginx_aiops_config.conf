# Nginx Load Balancer Configuration for ChatterFix CMMS + AIOps
# /etc/nginx/sites-available/chatterfix-aiops-lb

upstream chatterfix_backend {
    # Main CMMS service
    server 127.0.0.1:8000 weight=3;

    # Standalone AIOps service as backup
    server 127.0.0.1:8002 weight=1 backup;
}

upstream aiops_service {
    # Dedicated AIOps service
    server 127.0.0.1:8002;
}

server {
    listen 80;
    server_name 35.237.149.25 chatterfix.prod;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Main CMMS application (unified with AIOps)
    location / {
        proxy_pass http://chatterfix_backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket support
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;

        # Health check
        proxy_next_upstream error timeout http_502 http_503 http_504;
    }

    # Dedicated AIOps endpoints (standalone service)
    location /aiops/ {
        rewrite ^/aiops/(.*) /$1 break;
        proxy_pass http://aiops_service;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # Add custom header to indicate standalone service
        add_header X-Service-Type "AIOps-Standalone" always;
    }

    # Health check endpoint for load balancer
    location /nginx-health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Static files (served directly by nginx for performance)
    location /static/ {
        alias /home/yoyofred_gringosgambit_com/static/;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Monitoring endpoints
    location /metrics {
        stub_status on;
        access_log off;
        allow 127.0.0.1;
        allow 10.142.0.0/24;  # GCP internal network
        deny all;
    }

    # Error pages
    error_page 502 503 504 /maintenance.html;
    location = /maintenance.html {
        root /var/www/html;
        internal;
    }

    # Logs
    access_log /var/log/nginx/chatterfix-aiops.access.log;
    error_log /var/log/nginx/chatterfix-aiops.error.log;
}

# Additional server block for development/testing on port 8080
server {
    listen 8080;
    server_name _;

    # Development route to standalone AIOps
    location / {
        proxy_pass http://127.0.0.1:8002;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

        add_header X-Service-Type "AIOps-Dev" always;
    }

    access_log /var/log/nginx/chatterfix-dev.access.log;
    error_log /var/log/nginx/chatterfix-dev.error.log;
}
